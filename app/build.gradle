apply plugin: 'com.android.application'
//制作补丁时将这个打开，auto-patch-plugin紧跟着com.android.application
//apply plugin: 'auto-patch-plugin'
//apply plugin: 'robust'
apply plugin: 'android-aspectjx'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        debug {
            storeFile file('D:\\Android\\zskj.jks')
            storePassword '123456'
            keyAlias = 'zskj'
            keyPassword '123456'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.wesmarclothing.jniproject"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters "armeabi-v7a"
            }
        }
//        multiDexEnabled = true
//        multiDexKeepFile file('MultiDex.txt')
    }
    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }


    //修改apk名字
    applicationVariants.all { variant ->
        variant.outputs.all {
            // apk_渠道名-版本号-版本名称-编译时间.apk
            outputFileName = "Jni-v${defaultConfig.versionName}" + "c${defaultConfig.versionCode}" +
                    "-${new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))}-${variant.buildType.name}.apk"
        }
    }


//    splits {
//        abi {
//            enable true
//            reset()
//            include 'arm'
//            universalApk false
//        }
//    }
    aspectjx {
//排除所有package路径中包含`android.support`的class文件及库（jar文件）
        enabled true
    }

    dataBinding {
        enabled true
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


}

def room_version = "2.1.0-rc01"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.1'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //蓝牙库
    implementation 'com.clj.fastble:FastBleLib:2.3.2'
//    implementation 'io.reactivex:rxkotlin:2.3.0'
    implementation 'com.jackUtil:kotlintools:1.0.4'

    implementation 'com.alibaba:fastjson:1.1.70.android'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.31"

    //滴滴性能检测库
//    debugImplementation 'com.didichuxing.doraemonkit:doraemonkit:1.1.7'
//    releaseImplementation 'com.didichuxing.doraemonkit:doraemonkit-no-op:1.1.7'


    implementation 'androidx.viewpager2:viewpager2:1.0.0-beta02'
//    implementation 'androidx.transition:transition:1.2.0-alpha01'
//    implementation "androidx.security:security-crypto:1.0.0-alpha02"
//    implementation "androidx.savedstate:savedstate:1.0.0-beta01"
//    implementation "androidx.loader:loader:1.1.0-beta01"


//    implementation "androidx.room:room-runtime:$room_version"
//    // For Kotlin use kapt instead of annotationProcessor
//    annotationProcessor "androidx.room:room-compiler:$room_version"
//    // optional - Kotlin Extensions and Coroutines support for Room
//    implementation "androidx.room:room-ktx:$room_version"
//    // optional - RxJava support for Room
//    implementation "androidx.room:room-rxjava2:$room_version"
////    implementation 'androidx.sharetarget:sharetarget:1.0.0-alpha01'
////    implementation 'com.android.tools.build.jetifier:1.0.0-beta04'

    implementation 'no.nordicsemi.android:dfu:1.8.1'

    implementation 'com.jackUtil:RxTools:1.2.4'
    implementation 'com.jackUtil:net:1.0.3'

//    //javaCV 地址https://github.com/bytedeco/javacv
//    implementation group: 'org.bytedeco', name: 'javacv', version: '1.5'
////    implementation group: 'org.bytedeco', name: 'opencv-platform', version: '4.0.1-1.5'
////    implementation group: 'org.bytedeco', name: 'javacv', version: '1.3.2'
//    implementation group: 'org.bytedeco', name: 'opencv', version: '4.0.1-1.5',classifier: 'android-arm64'
//    implementation group: 'org.bytedeco', name: 'ffmpeg', version: '4.0.1-1.5',classifier: 'android-arm64'

//    implementation group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.2.0-1.3', classifier: 'android-arm'
//    implementation group: 'org.bytedeco.javacpp-presets', name: 'ffmpeg', version: '3.2.1-1.3', classifier: 'android-arm'

//    implementation 'cn.com.superLei:aop-arms:1.0.1'

    implementation 'no.nordicsemi.android:ble:2.1.1'
    implementation 'no.nordicsemi.android.support.v18:scanner:1.4.0'
    implementation project(path: ':lib_plugin')


    implementation 'com.meituan.robust:robust:0.4.90'

    implementation 'com.android.support:multidex:1.0.3'

    //万能RecyclerView适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40'


//    implementation 'com.jeremyliao:live-event-bus-x:1.4.4'

//https://github.com/markzhai/AndroidPerformanceMonitor
    implementation 'com.github.markzhai:blockcanary-android:1.5.0'

    implementation 'com.meituan.android.walle:library:1.1.6'
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    //https://github.com/manolovn/trianglify
    implementation 'com.manolovn:trianglify:1.1.0'
    //https://github.com/Yalantis/Horizon
    implementation 'com.yalantis:eqwaves:1.0.1'

    //Barebone Android
    implementation 'org.kodein.di:kodein-di-generic-jvm:6.3.3'
    implementation 'org.kodein.di:kodein-di-framework-android-x:6.3.3'

}

//https://github.com/keepLove/JiaguPlugin
//360加固   只需要执行 assemble${variantName} 就可以了
//插件会在执行assemble${variantName}前生成sJiaGu${variantName}方法
//插件会在Release编译打包的时候自动加固，测试模式时Debug编译打包也会执行
apply plugin: 'jiagu'

jiagu {
    jiaGuDir = "E:\\360Downloads\\360jiagu\\jiagu"
    username = "15323754617"
    password = "zskj123456"
    enable = false
    debug = false
}


//美团walle多渠道
apply plugin: 'walle'

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${flavorName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}
